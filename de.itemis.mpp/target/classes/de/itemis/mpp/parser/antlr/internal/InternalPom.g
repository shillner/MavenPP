/*
 * generated by Xtext
 */
grammar InternalPom;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.itemis.mpp.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.itemis.mpp.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.itemis.mpp.services.PomGrammarAccess;

}

@parser::members {

 	private PomGrammarAccess grammarAccess;
 	
    public InternalPomParser(TokenStream input, PomGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "POM";	
   	}
   	
   	@Override
   	protected PomGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulePOM
entryRulePOM returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPOMRule()); }
	 iv_rulePOM=rulePOM 
	 { $current=$iv_rulePOM.current; } 
	 EOF 
;

// Rule POM
rulePOM returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPOMAccess().getImportsPOMImportParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=rulePOMImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOMRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"POMImport");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPOMAccess().getParentParentRefParserRuleCall_1_0()); 
	    }
		lv_parent_1_0=ruleParentRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOMRule());
	        }
       		set(
       			$current, 
       			"parent",
        		lv_parent_1_0, 
        		"ParentRef");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPOMAccess().getArtifactDefinitionArtifactDefinitionParserRuleCall_2_0()); 
	    }
		lv_artifactDefinition_2_0=ruleArtifactDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOMRule());
	        }
       		set(
       			$current, 
       			"artifactDefinition",
        		lv_artifactDefinition_2_0, 
        		"ArtifactDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPOMAccess().getModulesModulesParserRuleCall_3_0()); 
	    }
		lv_modules_3_0=ruleModules		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOMRule());
	        }
       		set(
       			$current, 
       			"modules",
        		lv_modules_3_0, 
        		"Modules");
	        afterParserOrEnumRuleCall();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getPOMAccess().getUnorderedGroup_4());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPOMAccess().getUnorderedGroup_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getPOMAccess().getUnorderedGroup_4(), 0);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getPOMAccess().getPropertyInclusionsPropertyInclusionParserRuleCall_4_0_0()); 
	    }
		lv_propertyInclusions_5_0=rulePropertyInclusion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOMRule());
	        }
       		add(
       			$current, 
       			"propertyInclusions",
        		lv_propertyInclusions_5_0, 
        		"PropertyInclusion");
	        afterParserOrEnumRuleCall();
	    }

)
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPOMAccess().getUnorderedGroup_4());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPOMAccess().getUnorderedGroup_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getPOMAccess().getUnorderedGroup_4(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getPOMAccess().getPropertiesPropertyParserRuleCall_4_1_0()); 
	    }
		lv_properties_6_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOMRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_6_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPOMAccess().getUnorderedGroup_4());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPOMAccess().getUnorderedGroup_4(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getPOMAccess().getUnorderedGroup_4(), 2);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getPOMAccess().getDependenciesDependenciesParserRuleCall_4_2_0()); 
	    }
		lv_dependencies_7_0=ruleDependencies		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOMRule());
	        }
       		set(
       			$current, 
       			"dependencies",
        		lv_dependencies_7_0, 
        		"Dependencies");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPOMAccess().getUnorderedGroup_4());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPOMAccess().getUnorderedGroup_4(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getPOMAccess().getUnorderedGroup_4(), 3);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getPOMAccess().getScmSCMParserRuleCall_4_3_0()); 
	    }
		lv_scm_8_0=ruleSCM		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOMRule());
	        }
       		set(
       			$current, 
       			"scm",
        		lv_scm_8_0, 
        		"SCM");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPOMAccess().getUnorderedGroup_4());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getPOMAccess().getUnorderedGroup_4());
	}

)(
(
		{ 
	        newCompositeNode(grammarAccess.getPOMAccess().getBuildStepsBuildStepParserRuleCall_5_0()); 
	    }
		lv_buildSteps_9_0=ruleBuildStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOMRule());
	        }
       		add(
       			$current, 
       			"buildSteps",
        		lv_buildSteps_9_0, 
        		"BuildStep");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleParentRef
entryRuleParentRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParentRefRule()); }
	 iv_ruleParentRef=ruleParentRef 
	 { $current=$iv_ruleParentRef.current; } 
	 EOF 
;

// Rule ParentRef
ruleParentRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='parent' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParentRefAccess().getParentKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParentRefAccess().getCoordinatesCoordinatesParserRuleCall_1_0()); 
	    }
		lv_coordinates_1_0=ruleCoordinates		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParentRefRule());
	        }
       		set(
       			$current, 
       			"coordinates",
        		lv_coordinates_1_0, 
        		"Coordinates");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_relativePath_2_0=RULE_STRING
		{
			newLeafNode(lv_relativePath_2_0, grammarAccess.getParentRefAccess().getRelativePathSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParentRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"relativePath",
        		lv_relativePath_2_0, 
        		"STRING");
	    }

)
)?)
;





// Entry rule entryRuleModules
entryRuleModules returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModulesRule()); }
	 iv_ruleModules=ruleModules 
	 { $current=$iv_ruleModules.current; } 
	 EOF 
;

// Rule Modules
ruleModules returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='modules' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModulesAccess().getModulesKeyword_0());
    }
(
(
		lv_names_1_0=RULE_STRING
		{
			newLeafNode(lv_names_1_0, grammarAccess.getModulesAccess().getNamesSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModulesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModulesAccess().getCommaKeyword_2_0());
    }
(
(
		lv_names_3_0=RULE_STRING
		{
			newLeafNode(lv_names_3_0, grammarAccess.getModulesAccess().getNamesSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModulesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_3_0, 
        		"STRING");
	    }

)
))*)
;





// Entry rule entryRuleArtifactDefinition
entryRuleArtifactDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArtifactDefinitionRule()); }
	 iv_ruleArtifactDefinition=ruleArtifactDefinition 
	 { $current=$iv_ruleArtifactDefinition.current; } 
	 EOF 
;

// Rule ArtifactDefinition
ruleArtifactDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getArtifactDefinitionAccess().getArtifactDefinitionAction_0(),
            $current);
    }
)(	otherlv_1='group' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArtifactDefinitionAccess().getGroupKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactDefinitionAccess().getGroupIdIDAndDotParserRuleCall_1_1_0()); 
	    }
		lv_groupId_2_0=ruleIDAndDot		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactDefinitionRule());
	        }
       		set(
       			$current, 
       			"groupId",
        		lv_groupId_2_0, 
        		"IDAndDot");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_3='artifact' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArtifactDefinitionAccess().getArtifactKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactDefinitionAccess().getArtifactIdIDAndDashParserRuleCall_2_1_0()); 
	    }
		lv_artifactId_4_0=ruleIDAndDash		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactDefinitionRule());
	        }
       		set(
       			$current, 
       			"artifactId",
        		lv_artifactId_4_0, 
        		"IDAndDash");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='version' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArtifactDefinitionAccess().getVersionKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactDefinitionAccess().getVersionVersionParserRuleCall_3_1_0()); 
	    }
		lv_version_6_0=ruleVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactDefinitionRule());
	        }
       		set(
       			$current, 
       			"version",
        		lv_version_6_0, 
        		"Version");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='type' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getArtifactDefinitionAccess().getTypeKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactDefinitionAccess().getTypeTextParserRuleCall_4_1_0()); 
	    }
		lv_type_8_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactDefinitionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
))?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getArtifactDefinitionAccess().getUnorderedGroup_5());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArtifactDefinitionAccess().getUnorderedGroup_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArtifactDefinitionAccess().getUnorderedGroup_5(), 0);
	 				}
					({true}?=>(	otherlv_10='name' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getArtifactDefinitionAccess().getNameKeyword_5_0_0());
    }
(
(
		lv_artifactName_11_0=RULE_STRING
		{
			newLeafNode(lv_artifactName_11_0, grammarAccess.getArtifactDefinitionAccess().getArtifactNameSTRINGTerminalRuleCall_5_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArtifactDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"artifactName",
        		lv_artifactName_11_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArtifactDefinitionAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArtifactDefinitionAccess().getUnorderedGroup_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArtifactDefinitionAccess().getUnorderedGroup_5(), 1);
	 				}
					({true}?=>(	otherlv_12='description' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getArtifactDefinitionAccess().getDescriptionKeyword_5_1_0());
    }
(
(
		lv_description_13_0=RULE_STRING
		{
			newLeafNode(lv_description_13_0, grammarAccess.getArtifactDefinitionAccess().getDescriptionSTRINGTerminalRuleCall_5_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArtifactDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_13_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArtifactDefinitionAccess().getUnorderedGroup_5());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getArtifactDefinitionAccess().getUnorderedGroup_5());
	}

))
;





// Entry rule entryRuleIDAndDot
entryRuleIDAndDot returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIDAndDotRule()); } 
	 iv_ruleIDAndDot=ruleIDAndDot 
	 { $current=$iv_ruleIDAndDot.current.getText(); }  
	 EOF 
;

// Rule IDAndDot
ruleIDAndDot returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIDAndDotAccess().getIDOrPropteryRefParserRuleCall_0()); 
    }
    this_IDOrPropteryRef_0=ruleIDOrPropteryRef    {
		$current.merge(this_IDOrPropteryRef_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIDAndDotAccess().getFullStopKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getIDAndDotAccess().getIDOrPropteryRefParserRuleCall_1_1()); 
    }
    this_IDOrPropteryRef_2=ruleIDOrPropteryRef    {
		$current.merge(this_IDOrPropteryRef_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleIDAndDash
entryRuleIDAndDash returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIDAndDashRule()); } 
	 iv_ruleIDAndDash=ruleIDAndDash 
	 { $current=$iv_ruleIDAndDash.current.getText(); }  
	 EOF 
;

// Rule IDAndDash
ruleIDAndDash returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getIDAndDashAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIDAndDashAccess().getHyphenMinusKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getIDAndDashAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleClassifier
entryRuleClassifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassifierRule()); } 
	 iv_ruleClassifier=ruleClassifier 
	 { $current=$iv_ruleClassifier.current.getText(); }  
	 EOF 
;

// Rule Classifier
ruleClassifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getClassifierAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getNumberAccess().getINTTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleText
entryRuleText returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextRule()); } 
	 iv_ruleText=ruleText 
	 { $current=$iv_ruleText.current.getText(); }  
	 EOF 
;

// Rule Text
ruleText returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getTextAccess().getIDTerminalRuleCall_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getTextAccess().getNumberParserRuleCall_1()); 
    }
    this_Number_1=ruleNumber    {
		$current.merge(this_Number_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_ANY_OTHER_2=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_2);
    }

    { 
    newLeafNode(this_ANY_OTHER_2, grammarAccess.getTextAccess().getANY_OTHERTerminalRuleCall_2()); 
    }
)*
    ;





// Entry rule entryRulePropertyName
entryRulePropertyName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyNameRule()); } 
	 iv_rulePropertyName=rulePropertyName 
	 { $current=$iv_rulePropertyName.current.getText(); }  
	 EOF 
;

// Rule PropertyName
rulePropertyName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getPropertyNameAccess().getIDTerminalRuleCall_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='_' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameAccess().get_Keyword_2()); 
    }

    |
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameAccess().getFullStopKeyword_3()); 
    }
)*
    ;





// Entry rule entryRuleIDOrPropteryRef
entryRuleIDOrPropteryRef returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIDOrPropteryRefRule()); } 
	 iv_ruleIDOrPropteryRef=ruleIDOrPropteryRef 
	 { $current=$iv_ruleIDOrPropteryRef.current.getText(); }  
	 EOF 
;

// Rule IDOrPropteryRef
ruleIDOrPropteryRef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getIDOrPropteryRefAccess().getIDTerminalRuleCall_0()); 
    }

    |(
	kw='${' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIDOrPropteryRefAccess().getDollarSignLeftCurlyBracketKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getIDOrPropteryRefAccess().getPropertyNameParserRuleCall_1_1()); 
    }
    this_PropertyName_2=rulePropertyName    {
		$current.merge(this_PropertyName_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIDOrPropteryRefAccess().getRightCurlyBracketKeyword_1_2()); 
    }
))
    ;





// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	 iv_ruleVersion=ruleVersion 
	 { $current=$iv_ruleVersion.current; } 
	 EOF 
;

// Rule Version
ruleVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVersionAccess().getMajorNumberParserRuleCall_0_0()); 
	    }
		lv_major_0_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVersionRule());
	        }
       		set(
       			$current, 
       			"major",
        		lv_major_0_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVersionAccess().getFullStopKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVersionAccess().getMinorNumberParserRuleCall_1_1_0()); 
	    }
		lv_minor_2_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVersionRule());
	        }
       		set(
       			$current, 
       			"minor",
        		lv_minor_2_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVersionAccess().getFullStopKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVersionAccess().getIncrementalNumberParserRuleCall_1_2_1_0()); 
	    }
		lv_incremental_4_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVersionRule());
	        }
       		set(
       			$current, 
       			"incremental",
        		lv_incremental_4_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
))?)?(	otherlv_5='-' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVersionAccess().getHyphenMinusKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVersionAccess().getQualifierTextParserRuleCall_2_1_0()); 
	    }
		lv_qualifier_6_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVersionRule());
	        }
       		set(
       			$current, 
       			"qualifier",
        		lv_qualifier_6_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='property' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPropertyAccess().getPropertyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getNamePropertyNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=rulePropertyName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"PropertyName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPropertyAccess().getEqualsSignKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getPropertyAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePropertyInclusion
entryRulePropertyInclusion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyInclusionRule()); }
	 iv_rulePropertyInclusion=rulePropertyInclusion 
	 { $current=$iv_rulePropertyInclusion.current; } 
	 EOF 
;

// Rule PropertyInclusion
rulePropertyInclusion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPropertyInclusionAccess().getIncludeKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyInclusionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getPropertyInclusionAccess().getPomRefPOMImportCrossReference_1_0()); 
	}

)
)	otherlv_2='.properties' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPropertyInclusionAccess().getPropertiesKeyword_2());
    }
)
;





// Entry rule entryRuleDependencies
entryRuleDependencies returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDependenciesRule()); }
	 iv_ruleDependencies=ruleDependencies 
	 { $current=$iv_ruleDependencies.current; } 
	 EOF 
;

// Rule Dependencies
ruleDependencies returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDependenciesAccess().getDependenciesAction_0(),
            $current);
    }
)	otherlv_1='dependencies' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDependenciesAccess().getDependenciesKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDependenciesAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDependenciesAccess().getIncludesDependencyInclusionParserRuleCall_3_0_0()); 
	    }
		lv_includes_3_0=ruleDependencyInclusion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDependenciesRule());
	        }
       		add(
       			$current, 
       			"includes",
        		lv_includes_3_0, 
        		"DependencyInclusion");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDependenciesAccess().getDependencyGroupsDependencyGroupParserRuleCall_3_1_0()); 
	    }
		lv_dependencyGroups_4_0=ruleDependencyGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDependenciesRule());
	        }
       		add(
       			$current, 
       			"dependencyGroups",
        		lv_dependencyGroups_4_0, 
        		"DependencyGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDependenciesAccess().getUngroupedDependenciesUngroupedDependencyParserRuleCall_3_2_0()); 
	    }
		lv_ungroupedDependencies_5_0=ruleUngroupedDependency		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDependenciesRule());
	        }
       		add(
       			$current, 
       			"ungroupedDependencies",
        		lv_ungroupedDependencies_5_0, 
        		"UngroupedDependency");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDependenciesAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDependencyGroup
entryRuleDependencyGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDependencyGroupRule()); }
	 iv_ruleDependencyGroup=ruleDependencyGroup 
	 { $current=$iv_ruleDependencyGroup.current; } 
	 EOF 
;

// Rule DependencyGroup
ruleDependencyGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDependencyGroupAccess().getScopeDependencyScopeEnumRuleCall_0_0()); 
	    }
		lv_scope_0_0=ruleDependencyScope		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDependencyGroupRule());
	        }
       		set(
       			$current, 
       			"scope",
        		lv_scope_0_0, 
        		"DependencyScope");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDependencyGroupAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDependencyGroupAccess().getDependeciesDependencyParserRuleCall_2_0()); 
	    }
		lv_dependecies_2_0=ruleDependency		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDependencyGroupRule());
	        }
       		add(
       			$current, 
       			"dependecies",
        		lv_dependecies_2_0, 
        		"Dependency");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDependencyGroupAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleUngroupedDependency
entryRuleUngroupedDependency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUngroupedDependencyRule()); }
	 iv_ruleUngroupedDependency=ruleUngroupedDependency 
	 { $current=$iv_ruleUngroupedDependency.current; } 
	 EOF 
;

// Rule UngroupedDependency
ruleUngroupedDependency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUngroupedDependencyAccess().getScopeDependencyScopeEnumRuleCall_0_0()); 
	    }
		lv_scope_0_0=ruleDependencyScope		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUngroupedDependencyRule());
	        }
       		set(
       			$current, 
       			"scope",
        		lv_scope_0_0, 
        		"DependencyScope");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUngroupedDependencyAccess().getDependencyDependencyParserRuleCall_1_0()); 
	    }
		lv_dependency_1_0=ruleDependency		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUngroupedDependencyRule());
	        }
       		set(
       			$current, 
       			"dependency",
        		lv_dependency_1_0, 
        		"Dependency");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDependency
entryRuleDependency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDependencyRule()); }
	 iv_ruleDependency=ruleDependency 
	 { $current=$iv_ruleDependency.current; } 
	 EOF 
;

// Rule Dependency
ruleDependency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_optional_0_0=	'optional' 
    {
        newLeafNode(lv_optional_0_0, grammarAccess.getDependencyAccess().getOptionalOptionalKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDependencyRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDependencyAccess().getCoordinatesExtendedCoordinatesParserRuleCall_1_0()); 
	    }
		lv_coordinates_1_0=ruleExtendedCoordinates		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDependencyRule());
	        }
       		set(
       			$current, 
       			"coordinates",
        		lv_coordinates_1_0, 
        		"ExtendedCoordinates");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDependencyInclusion
entryRuleDependencyInclusion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDependencyInclusionRule()); }
	 iv_ruleDependencyInclusion=ruleDependencyInclusion 
	 { $current=$iv_ruleDependencyInclusion.current; } 
	 EOF 
;

// Rule DependencyInclusion
ruleDependencyInclusion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDependencyInclusionAccess().getIncludeKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDependencyInclusionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getDependencyInclusionAccess().getPomRefPOMImportCrossReference_1_0()); 
	}

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDependencyInclusionAccess().getFullStopKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDependencyInclusionAccess().getScopeDependencyScopeEnumRuleCall_3_0()); 
	    }
		lv_scope_3_0=ruleDependencyScope		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDependencyInclusionRule());
	        }
       		set(
       			$current, 
       			"scope",
        		lv_scope_3_0, 
        		"DependencyScope");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSCM
entryRuleSCM returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSCMRule()); }
	 iv_ruleSCM=ruleSCM 
	 { $current=$iv_ruleSCM.current; } 
	 EOF 
;

// Rule SCM
ruleSCM returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getSCMAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSCMAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSCMAccess().getUnorderedGroup(), 0);
	 				}
					({true}?=>(	otherlv_1='scm' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSCMAccess().getScmKeyword_0_0());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSCMAccess().getLeftCurlyBracketKeyword_0_1());
    }
(	otherlv_3='con' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSCMAccess().getConKeyword_0_2_0());
    }
(
(
		lv_connection_4_0=RULE_STRING
		{
			newLeafNode(lv_connection_4_0, grammarAccess.getSCMAccess().getConnectionSTRINGTerminalRuleCall_0_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSCMRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"connection",
        		lv_connection_4_0, 
        		"STRING");
	    }

)
))?))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSCMAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSCMAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSCMAccess().getUnorderedGroup(), 1);
	 				}
					({true}?=>(	otherlv_5='dev' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSCMAccess().getDevKeyword_1_0());
    }
(
(
		lv_developerConncetion_6_0=RULE_STRING
		{
			newLeafNode(lv_developerConncetion_6_0, grammarAccess.getSCMAccess().getDeveloperConncetionSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSCMRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"developerConncetion",
        		lv_developerConncetion_6_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSCMAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSCMAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSCMAccess().getUnorderedGroup(), 2);
	 				}
					({true}?=>(	otherlv_7='url' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSCMAccess().getUrlKeyword_2_0());
    }
(
(
		lv_url_8_0=RULE_STRING
		{
			newLeafNode(lv_url_8_0, grammarAccess.getSCMAccess().getUrlSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSCMRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"url",
        		lv_url_8_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSCMAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSCMAccess().getUnorderedGroup(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSCMAccess().getUnorderedGroup(), 3);
	 				}
					({true}?=>((	otherlv_9='tag' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSCMAccess().getTagKeyword_3_0_0());
    }
(
(
		lv_tag_10_0=RULE_STRING
		{
			newLeafNode(lv_tag_10_0, grammarAccess.getSCMAccess().getTagSTRINGTerminalRuleCall_3_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSCMRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tag",
        		lv_tag_10_0, 
        		"STRING");
	    }

)
))?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSCMAccess().getRightCurlyBracketKeyword_3_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSCMAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getSCMAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getSCMAccess().getUnorderedGroup());
	}

)
;





// Entry rule entryRulePlugin
entryRulePlugin returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPluginRule()); }
	 iv_rulePlugin=rulePlugin 
	 { $current=$iv_rulePlugin.current; } 
	 EOF 
;

// Rule Plugin
rulePlugin returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='plugin' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPluginAccess().getPluginKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginAccess().getCoordinatesCoordinatesParserRuleCall_1_0()); 
	    }
		lv_coordinates_1_0=ruleCoordinates		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginRule());
	        }
       		set(
       			$current, 
       			"coordinates",
        		lv_coordinates_1_0, 
        		"Coordinates");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPluginAccess().getLeftCurlyBracketKeyword_2());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getPluginAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPluginAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getPluginAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>(	otherlv_4='config' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPluginAccess().getConfigKeyword_3_0_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPluginAccess().getLeftCurlyBracketKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginAccess().getConfigurationPluginConfigurationParserRuleCall_3_0_2_0()); 
	    }
		lv_configuration_6_0=rulePluginConfiguration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginRule());
	        }
       		set(
       			$current, 
       			"configuration",
        		lv_configuration_6_0, 
        		"PluginConfiguration");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPluginAccess().getRightCurlyBracketKeyword_3_0_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPluginAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPluginAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getPluginAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginAccess().getExecutionsPluginExecutionParserRuleCall_3_1_0()); 
	    }
		lv_executions_8_0=rulePluginExecution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginRule());
	        }
       		add(
       			$current, 
       			"executions",
        		lv_executions_8_0, 
        		"PluginExecution");
	        afterParserOrEnumRuleCall();
	    }

)
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPluginAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getPluginAccess().getUnorderedGroup_3());
	}

)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPluginAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePluginConfiguration
entryRulePluginConfiguration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPluginConfigurationRule()); }
	 iv_rulePluginConfiguration=rulePluginConfiguration 
	 { $current=$iv_rulePluginConfiguration.current; } 
	 EOF 
;

// Rule PluginConfiguration
rulePluginConfiguration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginConfigurationAccess().getConfigurationItemsPluginConfigurationItemParserRuleCall_0()); 
	    }
		lv_configurationItems_0_0=rulePluginConfigurationItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginConfigurationRule());
	        }
       		add(
       			$current, 
       			"configurationItems",
        		lv_configurationItems_0_0, 
        		"PluginConfigurationItem");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRulePluginConfigurationItem
entryRulePluginConfigurationItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPluginConfigurationItemRule()); }
	 iv_rulePluginConfigurationItem=rulePluginConfigurationItem 
	 { $current=$iv_rulePluginConfigurationItem.current; } 
	 EOF 
;

// Rule PluginConfigurationItem
rulePluginConfigurationItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPluginConfigurationItemAccess().getPluginConfigurationParameterParserRuleCall_0()); 
    }
    this_PluginConfigurationParameter_0=rulePluginConfigurationParameter
    { 
        $current = $this_PluginConfigurationParameter_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPluginConfigurationItemAccess().getPluginConfigurationParameterListParserRuleCall_1()); 
    }
    this_PluginConfigurationParameterList_1=rulePluginConfigurationParameterList
    { 
        $current = $this_PluginConfigurationParameterList_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPluginConfigurationItemAccess().getPluginConfigurationParameterMapParserRuleCall_2()); 
    }
    this_PluginConfigurationParameterMap_2=rulePluginConfigurationParameterMap
    { 
        $current = $this_PluginConfigurationParameterMap_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPluginConfigurationItemAccess().getPluginConfigurationParameterPropertiesParserRuleCall_3()); 
    }
    this_PluginConfigurationParameterProperties_3=rulePluginConfigurationParameterProperties
    { 
        $current = $this_PluginConfigurationParameterProperties_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePluginConfigurationParameter
entryRulePluginConfigurationParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPluginConfigurationParameterRule()); }
	 iv_rulePluginConfigurationParameter=rulePluginConfigurationParameter 
	 { $current=$iv_rulePluginConfigurationParameter.current; } 
	 EOF 
;

// Rule PluginConfigurationParameter
rulePluginConfigurationParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_ID
		{
			newLeafNode(lv_key_0_0, grammarAccess.getPluginConfigurationParameterAccess().getKeyIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginConfigurationParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"ID");
	    }

)
)((
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getPluginConfigurationParameterAccess().getValueSTRINGTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginConfigurationParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
)
    |(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPluginConfigurationParameterAccess().getLeftCurlyBracketKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginConfigurationParameterAccess().getChildrenPluginConfigurationItemParserRuleCall_1_1_1_0()); 
	    }
		lv_children_3_0=rulePluginConfigurationItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginConfigurationParameterRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_3_0, 
        		"PluginConfigurationItem");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPluginConfigurationParameterAccess().getRightCurlyBracketKeyword_1_1_2());
    }
))?)
;





// Entry rule entryRulePluginConfigurationParameterList
entryRulePluginConfigurationParameterList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPluginConfigurationParameterListRule()); }
	 iv_rulePluginConfigurationParameterList=rulePluginConfigurationParameterList 
	 { $current=$iv_rulePluginConfigurationParameterList.current; } 
	 EOF 
;

// Rule PluginConfigurationParameterList
rulePluginConfigurationParameterList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_ID
		{
			newLeafNode(lv_key_0_0, grammarAccess.getPluginConfigurationParameterListAccess().getKeyIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginConfigurationParameterListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"ID");
	    }

)
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPluginConfigurationParameterListAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		lv_values_2_0=RULE_STRING
		{
			newLeafNode(lv_values_2_0, grammarAccess.getPluginConfigurationParameterListAccess().getValuesSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginConfigurationParameterListRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"STRING");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPluginConfigurationParameterListAccess().getCommaKeyword_3_0());
    }
(
(
		lv_values_4_0=RULE_STRING
		{
			newLeafNode(lv_values_4_0, grammarAccess.getPluginConfigurationParameterListAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginConfigurationParameterListRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_4_0, 
        		"STRING");
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPluginConfigurationParameterListAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRulePluginConfigurationParameterMap
entryRulePluginConfigurationParameterMap returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPluginConfigurationParameterMapRule()); }
	 iv_rulePluginConfigurationParameterMap=rulePluginConfigurationParameterMap 
	 { $current=$iv_rulePluginConfigurationParameterMap.current; } 
	 EOF 
;

// Rule PluginConfigurationParameterMap
rulePluginConfigurationParameterMap returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_ID
		{
			newLeafNode(lv_key_0_0, grammarAccess.getPluginConfigurationParameterMapAccess().getKeyIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginConfigurationParameterMapRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPluginConfigurationParameterMapAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginConfigurationParameterMapAccess().getEntriesPluginConfigurationParameterMapEntryParserRuleCall_2_0()); 
	    }
		lv_entries_2_0=rulePluginConfigurationParameterMapEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginConfigurationParameterMapRule());
	        }
       		add(
       			$current, 
       			"entries",
        		lv_entries_2_0, 
        		"PluginConfigurationParameterMapEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPluginConfigurationParameterMapAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRulePluginConfigurationParameterMapEntry
entryRulePluginConfigurationParameterMapEntry returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPluginConfigurationParameterMapEntryRule()); }
	 iv_rulePluginConfigurationParameterMapEntry=rulePluginConfigurationParameterMapEntry 
	 { $current=$iv_rulePluginConfigurationParameterMapEntry.current; } 
	 EOF 
;

// Rule PluginConfigurationParameterMapEntry
rulePluginConfigurationParameterMapEntry returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_ID
		{
			newLeafNode(lv_key_0_0, grammarAccess.getPluginConfigurationParameterMapEntryAccess().getKeyIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginConfigurationParameterMapEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"ID");
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPluginConfigurationParameterMapEntryAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getPluginConfigurationParameterMapEntryAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginConfigurationParameterMapEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePluginConfigurationParameterProperties
entryRulePluginConfigurationParameterProperties returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPluginConfigurationParameterPropertiesRule()); }
	 iv_rulePluginConfigurationParameterProperties=rulePluginConfigurationParameterProperties 
	 { $current=$iv_rulePluginConfigurationParameterProperties.current; } 
	 EOF 
;

// Rule PluginConfigurationParameterProperties
rulePluginConfigurationParameterProperties returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_ID
		{
			newLeafNode(lv_key_0_0, grammarAccess.getPluginConfigurationParameterPropertiesAccess().getKeyIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginConfigurationParameterPropertiesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPluginConfigurationParameterPropertiesAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginConfigurationParameterPropertiesAccess().getEntriesPluginConfigurationParameterPropertyEntryParserRuleCall_2_0()); 
	    }
		lv_entries_2_0=rulePluginConfigurationParameterPropertyEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginConfigurationParameterPropertiesRule());
	        }
       		add(
       			$current, 
       			"entries",
        		lv_entries_2_0, 
        		"PluginConfigurationParameterPropertyEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPluginConfigurationParameterPropertiesAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRulePluginConfigurationParameterPropertyEntry
entryRulePluginConfigurationParameterPropertyEntry returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPluginConfigurationParameterPropertyEntryRule()); }
	 iv_rulePluginConfigurationParameterPropertyEntry=rulePluginConfigurationParameterPropertyEntry 
	 { $current=$iv_rulePluginConfigurationParameterPropertyEntry.current; } 
	 EOF 
;

// Rule PluginConfigurationParameterPropertyEntry
rulePluginConfigurationParameterPropertyEntry returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_ID
		{
			newLeafNode(lv_key_0_0, grammarAccess.getPluginConfigurationParameterPropertyEntryAccess().getKeyIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginConfigurationParameterPropertyEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPluginConfigurationParameterPropertyEntryAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getPluginConfigurationParameterPropertyEntryAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginConfigurationParameterPropertyEntryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePluginExecution
entryRulePluginExecution returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPluginExecutionRule()); }
	 iv_rulePluginExecution=rulePluginExecution 
	 { $current=$iv_rulePluginExecution.current; } 
	 EOF 
;

// Rule PluginExecution
rulePluginExecution returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='exec' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPluginExecutionAccess().getExecKeyword_0());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getPluginExecutionAccess().getIdIDAndDashParserRuleCall_1_0_0_0()); 
	    }
		lv_id_1_0=ruleIDAndDash		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginExecutionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"IDAndDash");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_2='in' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPluginExecutionAccess().getInKeyword_1_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginExecutionAccess().getPhasePhaseEnumRuleCall_1_0_1_1_0()); 
	    }
		lv_phase_3_0=rulePhase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginExecutionRule());
	        }
       		set(
       			$current, 
       			"phase",
        		lv_phase_3_0, 
        		"Phase");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='with goals' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPluginExecutionAccess().getWithGoalsKeyword_1_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginExecutionAccess().getGoalsIDAndDashParserRuleCall_1_0_3_0()); 
	    }
		lv_goals_5_0=ruleIDAndDash		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginExecutionRule());
	        }
       		add(
       			$current, 
       			"goals",
        		lv_goals_5_0, 
        		"IDAndDash");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPluginExecutionAccess().getCommaKeyword_1_0_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginExecutionAccess().getGoalsIDAndDashParserRuleCall_1_0_4_1_0()); 
	    }
		lv_goals_7_0=ruleIDAndDash		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginExecutionRule());
	        }
       		add(
       			$current, 
       			"goals",
        		lv_goals_7_0, 
        		"IDAndDash");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPluginExecutionAccess().getLeftCurlyBracketKeyword_1_0_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginExecutionAccess().getConfigurationPluginConfigurationParserRuleCall_1_0_5_1_0()); 
	    }
		lv_configuration_9_0=rulePluginConfiguration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginExecutionRule());
	        }
       		set(
       			$current, 
       			"configuration",
        		lv_configuration_9_0, 
        		"PluginConfiguration");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPluginExecutionAccess().getRightCurlyBracketKeyword_1_0_5_2());
    }
)?)
    |(
(
		lv_default_11_0=	'default' 
    {
        newLeafNode(lv_default_11_0, grammarAccess.getPluginExecutionAccess().getDefaultDefaultKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginExecutionRule());
	        }
       		setWithLastConsumed($current, "default", true, "default");
	    }

)
)))
;





// Entry rule entryRulePluginInclusion
entryRulePluginInclusion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPluginInclusionRule()); }
	 iv_rulePluginInclusion=rulePluginInclusion 
	 { $current=$iv_rulePluginInclusion.current; } 
	 EOF 
;

// Rule PluginInclusion
rulePluginInclusion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPluginInclusionAccess().getIncludeKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginInclusionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getPluginInclusionAccess().getPomRefPOMImportCrossReference_1_0()); 
	}

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPluginInclusionAccess().getFullStopKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPluginInclusionAccess().getPluginCoordinatesCoordinatesParserRuleCall_3_0()); 
	    }
		lv_pluginCoordinates_3_0=ruleCoordinates		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginInclusionRule());
	        }
       		set(
       			$current, 
       			"pluginCoordinates",
        		lv_pluginCoordinates_3_0, 
        		"Coordinates");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='.' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPluginInclusionAccess().getFullStopKeyword_4_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPluginInclusionAccess().getExecutionIdIDAndDashParserRuleCall_4_1_0_0()); 
	    }
		lv_executionId_5_0=ruleIDAndDash		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPluginInclusionRule());
	        }
       		set(
       			$current, 
       			"executionId",
        		lv_executionId_5_0, 
        		"IDAndDash");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_config_6_0=	'config' 
    {
        newLeafNode(lv_config_6_0, grammarAccess.getPluginInclusionAccess().getConfigConfigKeyword_4_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPluginInclusionRule());
	        }
       		setWithLastConsumed($current, "config", true, "config");
	    }

)
)))?)
;





// Entry rule entryRuleBuildStep
entryRuleBuildStep returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBuildStepRule()); }
	 iv_ruleBuildStep=ruleBuildStep 
	 { $current=$iv_ruleBuildStep.current; } 
	 EOF 
;

// Rule BuildStep
ruleBuildStep returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBuildStepAccess().getPluginParserRuleCall_0()); 
    }
    this_Plugin_0=rulePlugin
    { 
        $current = $this_Plugin_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBuildStepAccess().getPluginInclusionParserRuleCall_1()); 
    }
    this_PluginInclusion_1=rulePluginInclusion
    { 
        $current = $this_PluginInclusion_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCoordinates
entryRuleCoordinates returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCoordinatesRule()); }
	 iv_ruleCoordinates=ruleCoordinates 
	 { $current=$iv_ruleCoordinates.current; } 
	 EOF 
;

// Rule Coordinates
ruleCoordinates returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCoordinatesAccess().getGroupIdIDAndDotParserRuleCall_0_0()); 
	    }
		lv_groupId_0_0=ruleIDAndDot		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCoordinatesRule());
	        }
       		set(
       			$current, 
       			"groupId",
        		lv_groupId_0_0, 
        		"IDAndDot");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCoordinatesAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCoordinatesAccess().getArtifactIdIDAndDashParserRuleCall_2_0()); 
	    }
		lv_artifactId_2_0=ruleIDAndDash		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCoordinatesRule());
	        }
       		set(
       			$current, 
       			"artifactId",
        		lv_artifactId_2_0, 
        		"IDAndDash");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCoordinatesAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCoordinatesAccess().getVersionVersionParserRuleCall_4_0()); 
	    }
		lv_version_4_0=ruleVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCoordinatesRule());
	        }
       		set(
       			$current, 
       			"version",
        		lv_version_4_0, 
        		"Version");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExtendedCoordinates
entryRuleExtendedCoordinates returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtendedCoordinatesRule()); }
	 iv_ruleExtendedCoordinates=ruleExtendedCoordinates 
	 { $current=$iv_ruleExtendedCoordinates.current; } 
	 EOF 
;

// Rule ExtendedCoordinates
ruleExtendedCoordinates returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExtendedCoordinatesAccess().getGroupIdIDAndDotParserRuleCall_0_0()); 
	    }
		lv_groupId_0_0=ruleIDAndDot		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtendedCoordinatesRule());
	        }
       		set(
       			$current, 
       			"groupId",
        		lv_groupId_0_0, 
        		"IDAndDot");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExtendedCoordinatesAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtendedCoordinatesAccess().getArtifactIdIDAndDashParserRuleCall_2_0()); 
	    }
		lv_artifactId_2_0=ruleIDAndDash		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtendedCoordinatesRule());
	        }
       		set(
       			$current, 
       			"artifactId",
        		lv_artifactId_2_0, 
        		"IDAndDash");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExtendedCoordinatesAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtendedCoordinatesAccess().getVersionVersionParserRuleCall_4_0()); 
	    }
		lv_version_4_0=ruleVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtendedCoordinatesRule());
	        }
       		set(
       			$current, 
       			"version",
        		lv_version_4_0, 
        		"Version");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExtendedCoordinatesAccess().getColonKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtendedCoordinatesAccess().getTypeIDAndDashParserRuleCall_5_1_0()); 
	    }
		lv_type_6_0=ruleIDAndDash		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtendedCoordinatesRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_6_0, 
        		"IDAndDash");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExtendedCoordinatesAccess().getColonKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtendedCoordinatesAccess().getClassifierClassifierParserRuleCall_5_2_1_0()); 
	    }
		lv_classifier_8_0=ruleClassifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtendedCoordinatesRule());
	        }
       		set(
       			$current, 
       			"classifier",
        		lv_classifier_8_0, 
        		"Classifier");
	        afterParserOrEnumRuleCall();
	    }

)
))?)?)
;





// Entry rule entryRulePOMImport
entryRulePOMImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPOMImportRule()); }
	 iv_rulePOMImport=rulePOMImport 
	 { $current=$iv_rulePOMImport.current; } 
	 EOF 
;

// Rule POMImport
rulePOMImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPOMImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPOMImportAccess().getCoordinatesCoordinatesParserRuleCall_1_0()); 
	    }
		lv_coordinates_1_0=ruleCoordinates		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOMImportRule());
	        }
       		set(
       			$current, 
       			"coordinates",
        		lv_coordinates_1_0, 
        		"Coordinates");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPOMImportAccess().getAsKeyword_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getPOMImportAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPOMImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))
;





// Rule DependencyScope
ruleDependencyScope returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='compile' 
	{
        $current = grammarAccess.getDependencyScopeAccess().getCOMPILEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getDependencyScopeAccess().getCOMPILEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='provided' 
	{
        $current = grammarAccess.getDependencyScopeAccess().getPROVIDEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getDependencyScopeAccess().getPROVIDEDEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='runtime' 
	{
        $current = grammarAccess.getDependencyScopeAccess().getRUNTIMEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getDependencyScopeAccess().getRUNTIMEEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='system' 
	{
        $current = grammarAccess.getDependencyScopeAccess().getSYSTEMEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getDependencyScopeAccess().getSYSTEMEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='test' 
	{
        $current = grammarAccess.getDependencyScopeAccess().getTESTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getDependencyScopeAccess().getTESTEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='import' 
	{
        $current = grammarAccess.getDependencyScopeAccess().getIMPORTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getDependencyScopeAccess().getIMPORTEnumLiteralDeclaration_5()); 
    }
));



// Rule Phase
rulePhase returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='default' 
	{
        $current = grammarAccess.getPhaseAccess().getDEFAULTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getPhaseAccess().getDEFAULTEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='pre-clean' 
	{
        $current = grammarAccess.getPhaseAccess().getPRE_CLEANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getPhaseAccess().getPRE_CLEANEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='clean' 
	{
        $current = grammarAccess.getPhaseAccess().getCLEANEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getPhaseAccess().getCLEANEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='post-clean' 
	{
        $current = grammarAccess.getPhaseAccess().getPOST_CLEANEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getPhaseAccess().getPOST_CLEANEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='validate' 
	{
        $current = grammarAccess.getPhaseAccess().getVALIDATEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getPhaseAccess().getVALIDATEEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='initialize' 
	{
        $current = grammarAccess.getPhaseAccess().getINITIALIZEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getPhaseAccess().getINITIALIZEEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='generate-sources' 
	{
        $current = grammarAccess.getPhaseAccess().getGENERATE_SOURCESEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getPhaseAccess().getGENERATE_SOURCESEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='process-sources' 
	{
        $current = grammarAccess.getPhaseAccess().getPROCESS_SOURCESEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getPhaseAccess().getPROCESS_SOURCESEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='generate-resources' 
	{
        $current = grammarAccess.getPhaseAccess().getGENERATE_RESOURCESEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getPhaseAccess().getGENERATE_RESOURCESEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='process-resources' 
	{
        $current = grammarAccess.getPhaseAccess().getPROCESS_RESOURCESEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getPhaseAccess().getPROCESS_RESOURCESEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='compile' 
	{
        $current = grammarAccess.getPhaseAccess().getCOMPILEEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getPhaseAccess().getCOMPILEEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='process-classes' 
	{
        $current = grammarAccess.getPhaseAccess().getPROCESS_CLASSESEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getPhaseAccess().getPROCESS_CLASSESEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='generate-test-sources' 
	{
        $current = grammarAccess.getPhaseAccess().getGENERATE_TEST_SOURCESEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getPhaseAccess().getGENERATE_TEST_SOURCESEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='process-test-sources' 
	{
        $current = grammarAccess.getPhaseAccess().getPROCESS_TEST_SOURCESEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getPhaseAccess().getPROCESS_TEST_SOURCESEnumLiteralDeclaration_13()); 
    }
)
    |(	enumLiteral_14='generate-test-resources' 
	{
        $current = grammarAccess.getPhaseAccess().getGENERATE_TEST_RESOURCESEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_14, grammarAccess.getPhaseAccess().getGENERATE_TEST_RESOURCESEnumLiteralDeclaration_14()); 
    }
)
    |(	enumLiteral_15='process-test-resources' 
	{
        $current = grammarAccess.getPhaseAccess().getPROCESS_TEST_RESOURCESEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_15, grammarAccess.getPhaseAccess().getPROCESS_TEST_RESOURCESEnumLiteralDeclaration_15()); 
    }
)
    |(	enumLiteral_16='test-compile' 
	{
        $current = grammarAccess.getPhaseAccess().getTEST_COMPILEEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_16, grammarAccess.getPhaseAccess().getTEST_COMPILEEnumLiteralDeclaration_16()); 
    }
)
    |(	enumLiteral_17='process-test-classes' 
	{
        $current = grammarAccess.getPhaseAccess().getPROCESS_TEST_CLASSESEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_17, grammarAccess.getPhaseAccess().getPROCESS_TEST_CLASSESEnumLiteralDeclaration_17()); 
    }
)
    |(	enumLiteral_18='test' 
	{
        $current = grammarAccess.getPhaseAccess().getTESTEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_18, grammarAccess.getPhaseAccess().getTESTEnumLiteralDeclaration_18()); 
    }
)
    |(	enumLiteral_19='prepare-package' 
	{
        $current = grammarAccess.getPhaseAccess().getPREPARE_PACKAGEEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_19, grammarAccess.getPhaseAccess().getPREPARE_PACKAGEEnumLiteralDeclaration_19()); 
    }
)
    |(	enumLiteral_20='package' 
	{
        $current = grammarAccess.getPhaseAccess().getPACKAGEEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_20, grammarAccess.getPhaseAccess().getPACKAGEEnumLiteralDeclaration_20()); 
    }
)
    |(	enumLiteral_21='pre-integration-test' 
	{
        $current = grammarAccess.getPhaseAccess().getPRE_INTEGRATION_TESTEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_21, grammarAccess.getPhaseAccess().getPRE_INTEGRATION_TESTEnumLiteralDeclaration_21()); 
    }
)
    |(	enumLiteral_22='integration-test' 
	{
        $current = grammarAccess.getPhaseAccess().getINTEGRATION_TESTEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_22, grammarAccess.getPhaseAccess().getINTEGRATION_TESTEnumLiteralDeclaration_22()); 
    }
)
    |(	enumLiteral_23='post-integration-test' 
	{
        $current = grammarAccess.getPhaseAccess().getPOST_INTEGRATION_TESTEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_23, grammarAccess.getPhaseAccess().getPOST_INTEGRATION_TESTEnumLiteralDeclaration_23()); 
    }
)
    |(	enumLiteral_24='verify' 
	{
        $current = grammarAccess.getPhaseAccess().getVERIFYEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_24, grammarAccess.getPhaseAccess().getVERIFYEnumLiteralDeclaration_24()); 
    }
)
    |(	enumLiteral_25='install' 
	{
        $current = grammarAccess.getPhaseAccess().getINSTALLEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_25, grammarAccess.getPhaseAccess().getINSTALLEnumLiteralDeclaration_25()); 
    }
)
    |(	enumLiteral_26='deploy' 
	{
        $current = grammarAccess.getPhaseAccess().getDEPLOYEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_26, grammarAccess.getPhaseAccess().getDEPLOYEnumLiteralDeclaration_26()); 
    }
)
    |(	enumLiteral_27='pre-site' 
	{
        $current = grammarAccess.getPhaseAccess().getPRE_SITEEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_27, grammarAccess.getPhaseAccess().getPRE_SITEEnumLiteralDeclaration_27()); 
    }
)
    |(	enumLiteral_28='site' 
	{
        $current = grammarAccess.getPhaseAccess().getSITEEnumLiteralDeclaration_28().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_28, grammarAccess.getPhaseAccess().getSITEEnumLiteralDeclaration_28()); 
    }
)
    |(	enumLiteral_29='post-site' 
	{
        $current = grammarAccess.getPhaseAccess().getPOST_SITEEnumLiteralDeclaration_29().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_29, grammarAccess.getPhaseAccess().getPOST_SITEEnumLiteralDeclaration_29()); 
    }
)
    |(	enumLiteral_30='site-deploy' 
	{
        $current = grammarAccess.getPhaseAccess().getSITE_DEPLOYEnumLiteralDeclaration_30().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_30, grammarAccess.getPhaseAccess().getSITE_DEPLOYEnumLiteralDeclaration_30()); 
    }
));



RULE_ID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


